["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$JSON",["^ ","~$stringify",["^ "]],"~$console",["^ ","~$info",["^ "],"~$log",["^ "]],"~$Object",["^ "],"~$goog",["^ "],"~$window",["^ "]],"~:use-macros",["^ ","~$join","~$clojure.string","~$go","~$cljs.core.async.macros","~$dbg","~$gadjett.core","~$!>","~$purnam.core","~$go-loop","^?","~$lower-case","^=","~$?","^C","~$split","^="],"~:excludes",["~#set",[]],"~:name","~$klipse.lang.clojure.io","~:imports",null,"~:requires",["^ ","~$klipse.utils","^M","~$cljs-http.client","^N","~$cljs-http.util","^O","~$cljs.core.async","^P","~$klipse.lang.clojure.include","^Q","~$s","^=","~$string","^=","^=","^=","~$cljs.reader","^S","~$clojure.walk","^T","~$ww","^T","~$http","^N"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$url-parameters","^M","~$<!","^P","~$transit-decode","^O","^<","^=","~$def-a-var","^Q","~$verbose?","^M","~$klipse-settings","^M","^E","^=","~$read-string","^S","^F","^="],"~:defs",["^ ","~$bundled-ns-ignore-regexp",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","~:line",190,"~:column",7,"~:end-line",190,"~:end-column",31,"~:arglists",["~#list",["~$quote",["^1>",[[]]]]]],"^I","~$klipse.lang.clojure.io/bundled-ns-ignore-regexp","~:variadic",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",31,"~:method-params",["^1>",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^1>",[null,null]],"^1:",1,"^19",190,"^1;",190,"~:max-fixed-arity",0,"~:fn-var",true,"^1=",["^1>",["^1?",["^1>",[[]]]]]],"~$skip-ns-macros",["^ ","^I","~$klipse.lang.clojure.io/skip-ns-macros","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",61,"^1:",1,"^1;",61,"^1<",20,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",61,"^1:",6,"^1;",61,"^1<",20],"~:tag","~$cljs.core/ISet"],"~$name->cached-resource",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",119,"^1:",7,"^1;",119,"^1<",28,"^1=",["^1>",["^1?",["^1>",[["~$name"]]]]]],"^I","~$klipse.lang.clojure.io/name->cached-resource","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",28,"^1B",["^1>",[["^1L"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",119,"^1;",119,"^1E",1,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]]],"~$the-ns-map",["^ ","^I","~$klipse.lang.clojure.io/the-ns-map","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",68,"^1:",1,"^1;",68,"^1<",16,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",68,"^1:",6,"^1;",68,"^1<",16],"^1I","~$cljs.core/IMap"],"~$macro-suffixes",["^ ","^I","~$klipse.lang.clojure.io/macro-suffixes","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",22,"^1:",1,"^1;",22,"^1<",20,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",22,"^1:",6,"^1;",22,"^1<",20],"^1I","~$cljs.core/IVector"],"~$cached-macro-ns-regexp",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",141,"^1:",7,"^1;",141,"^1<",29,"^1=",["^1>",["^1?",["^1>",[[]]]]]],"^I","~$klipse.lang.clojure.io/cached-macro-ns-regexp","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",29,"^1B",["^1>",[[]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",141,"^1;",141,"^1E",0,"^1F",true,"^1=",["^1>",["^1?",["^1>",[[]]]]]],"~$cljsjs?",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",210,"^1:",7,"^1;",210,"^1<",14,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]]],"^I","~$klipse.lang.clojure.io/cljsjs?","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",14,"^1B",["^1>",[["^1L"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",210,"^1;",210,"^1E",1,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]]],"~$bundled-cljsjs-ns?",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",219,"^1:",7,"^1;",219,"^1<",25,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]],"~:doc","some cljsjs packages are already loaded e.g react in klipse app"],"^I","~$klipse.lang.clojure.io/bundled-cljsjs-ns?","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",25,"^1B",["^1>",[["^1L"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",219,"^1;",219,"^1E",1,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]],"^1Y","some cljsjs packages are already loaded e.g react in klipse app"],"~$skip-ns-cljs",["^ ","^I","~$klipse.lang.clojure.io/skip-ns-cljs","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",72,"^1:",1,"^1;",72,"^1<",18,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",72,"^1:",6,"^1;",72,"^1<",18],"^1I","^1J"],"~$cljsjs-libname",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",213,"^1:",7,"^1;",213,"^1<",21,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]]],"^I","~$klipse.lang.clojure.io/cljsjs-libname","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",21,"^1B",["^1>",[["^1L"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",213,"^1;",213,"^1E",1,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]]],"~$another-goog-path",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",300,"^1:",7,"^1;",300,"^1<",24,"^1=",["^1>",["^1?",["^1>",[["~$path"]]]]]],"^I","~$klipse.lang.clojure.io/another-goog-path","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",24,"^1B",["^1>",[["^24"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",300,"^1;",300,"^1E",1,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^24"]]]]]],"~$buggy-bundled-ns-ignore?",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",197,"^1:",7,"^1;",197,"^1<",31,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]]],"^I","~$klipse.lang.clojure.io/buggy-bundled-ns-ignore?","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",31,"^1B",["^1>",[["^1L"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",197,"^1;",197,"^1E",1,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]]],"~$external-libs-files",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",110,"^1:",7,"^1;",110,"^1<",26,"^1=",["^1>",["^1?",["^1>",[["~$external-libs","~$suffixes","^24"]]]]],"^1Y","returns a list of files provided list of external-libs and suffixes"],"^I","~$klipse.lang.clojure.io/external-libs-files","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",26,"^1B",["^1>",[["^29","^2:","^24"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",110,"^1;",110,"^1E",3,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^29","^2:","^24"]]]]],"^1Y","returns a list of files provided list of external-libs and suffixes"],"~$cached-ns-regexp",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",147,"^1:",7,"^1;",147,"^1<",23,"^1=",["^1>",["^1?",["^1>",[[]]]]]],"^I","~$klipse.lang.clojure.io/cached-ns-regexp","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",23,"^1B",["^1>",[[]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",147,"^1;",147,"^1E",0,"^1F",true,"^1=",["^1>",["^1?",["^1>",[[]]]]]],"~$cljs-suffixes",["^ ","^I","~$klipse.lang.clojure.io/cljs-suffixes","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",23,"^1:",1,"^1;",23,"^1<",19,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",23,"^1:",6,"^1;",23,"^1<",19],"^1I","^1S"],"~$cached-cljs-ns?",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",150,"^1:",7,"^1;",150,"^1<",22,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]]],"^I","~$klipse.lang.clojure.io/cached-cljs-ns?","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",22,"^1B",["^1>",[["^1L"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",150,"^1;",150,"^1E",1,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]]],"~$bundled-ns?",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",202,"^1:",7,"^1;",202,"^1<",18,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]],"^1Y","Checks whether a namespace is present at run-time"],"^I","~$klipse.lang.clojure.io/bundled-ns?","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",18,"^1B",["^1>",[["^1L"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",202,"^1;",202,"^1E",1,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]],"^1Y","Checks whether a namespace is present at run-time"],"~$load-ns",["^ ","^I","~$klipse.lang.clojure.io/load-ns","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",25,"^1:",1,"^1;",25,"^1<",18,"^1Y","\n  Each runtime environment provides a different way to load a library.\n  Received two arguments - a map and a callback function:\n  The map will have the following keys:\n\n    :name   - the name of the library (a symbol)\n    :macros - modifier signaling a macros namespace load\n    :path   - munged relative library path (a string)\n\n    It is up to the implementor to correctly resolve the corresponding .cljs,\n    .cljc, or .js resource (the order must be respected).\n    If :macros is true, resolution should only consider .clj or .cljc resources (the order must be respected).\n  Upon resolution the callback should be invoked with a map containing the following keys:\n\n    :lang       - the language, :clj or :js\n    :source     - the source of the library (a string)\n    :file       - optional, the file path, it will be added to AST's :file keyword (but not in :meta)\n    :cache      - optional, if a :clj namespace has been precompiled to :js, can give an analysis cache for faster loads.\n    :source-map - optional, if a :clj namespace has been precompiled to :js, can give a V3 source map JSON\n\n    If the resource could not be resolved, the callback should be invoked with\n    nil.","^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",25,"^1:",11,"^1;",25,"^1<",18,"^1Y","\n  Each runtime environment provides a different way to load a library.\n  Received two arguments - a map and a callback function:\n  The map will have the following keys:\n\n    :name   - the name of the library (a symbol)\n    :macros - modifier signaling a macros namespace load\n    :path   - munged relative library path (a string)\n\n    It is up to the implementor to correctly resolve the corresponding .cljs,\n    .cljc, or .js resource (the order must be respected).\n    If :macros is true, resolution should only consider .clj or .cljc resources (the order must be respected).\n  Upon resolution the callback should be invoked with a map containing the following keys:\n\n    :lang       - the language, :clj or :js\n    :source     - the source of the library (a string)\n    :file       - optional, the file path, it will be added to AST's :file keyword (but not in :meta)\n    :cache      - optional, if a :clj namespace has been precompiled to :js, can give an analysis cache for faster loads.\n    :source-map - optional, if a :clj namespace has been precompiled to :js, can give a V3 source map JSON\n\n    If the resource could not be resolved, the callback should be invoked with\n    nil."],"^1I","~$cljs.core/MultiFn"],"~$fix-goog-path",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",281,"^1:",7,"^1;",281,"^1<",20,"^1=",["^1>",["^1?",["^1>",[["^24"]]]]]],"^I","~$klipse.lang.clojure.io/fix-goog-path","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",20,"^1B",["^1>",[["^24"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",281,"^1;",281,"^1E",1,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^24"]]]]]],"~$cached-ns-root",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",123,"^1:",7,"^1;",123,"^1<",21,"^1=",["^1>",["^1?",["^1>",[[]]]]]],"^I","~$klipse.lang.clojure.io/cached-ns-root","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",21,"^1B",["^1>",[[]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",123,"^1;",123,"^1E",0,"^1F",true,"^1=",["^1>",["^1?",["^1>",[[]]]]]],"~$cache-url",["^ ","^I","~$klipse.lang.clojure.io/cache-url","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",181,"^1:",1,"^1;",181,"^1<",15,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",181,"^1:",6,"^1;",181,"^1<",15],"^1I","^R"],"~$filename-of",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",82,"^1:",7,"^1;",82,"^1<",18,"^1=",["^1>",["^1?",["^1>",[["~$s","~$cache-buster?"]]]]]],"^I","~$klipse.lang.clojure.io/filename-of","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",18,"^1B",["^1>",[["~$s","^2N"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",82,"^1;",82,"^1E",2,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["~$s","^2N"]]]]]],"^2N",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",78,"^1:",7,"^1;",78,"^1<",20,"^1=",["^1>",["^1?",["^1>",[[]]]]]],"^I","~$klipse.lang.clojure.io/cache-buster?","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",20,"^1B",["^1>",[[]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",78,"^1;",78,"^1E",0,"^1F",true,"^1=",["^1>",["^1?",["^1>",[[]]]]]],"~$custom-bundled-ns-ignore?",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",193,"^1:",7,"^1;",193,"^1<",32,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]]],"^I","~$klipse.lang.clojure.io/custom-bundled-ns-ignore?","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",32,"^1B",["^1>",[["^1L"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",193,"^1;",193,"^1E",1,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]]],"~$try-to-load-ns",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",87,"^1:",7,"^1;",87,"^1<",21,"^1=",["^1>",["^1?",["^1>",[["~$filenames","~$lang","~$src-key","~$src-cb","~$&",["^ ","~:keys",["~$transform","~$can-recover?"],"~:or",["^ ","^2Y","~$identity","^2Z",false]]]]]]],"^1Y","Tries to load one namespace from filenames.\n  Will call the src-cb upon first success.\n  If can-recover? is false, will call src-cb with nil if it cannot load any namespace.\n  Returns :success if a nampespace was loaded otherwise, returns nil.\n  ","~:top-fn",["^ ","^1A",true,"^1E",4,"^1B",[["^1>",["^2T","^2U","^2V","^2W",["^ ","^2X",["^2Y","^2Z"],"^2[",["^ ","^2Y","^30","^2Z",false]]]]],"^1=",["^1>",[["^2T","^2U","^2V","^2W","~$&",["^ ","^2X",["^2Y","^2Z"],"^2[",["^ ","^2Y","^30","^2Z",false]]]]],"^1D",["^1>",[null]]]],"^I","~$klipse.lang.clojure.io/try-to-load-ns","^1A",true,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",21,"^31",["^ ","^1A",true,"^1E",4,"^1B",[["^1>",["^2T","^2U","^2V","^2W",["^ ","^2X",["^2Y","^2Z"],"^2[",["^ ","^2Y","^30","^2Z",false]]]]],"^1=",["^1>",[["^2T","^2U","^2V","^2W","~$&",["^ ","^2X",["^2Y","^2Z"],"^2[",["^ ","^2Y","^30","^2Z",false]]]]],"^1D",["^1>",[null]]],"^1B",[["^1>",["^2T","^2U","^2V","^2W",["^ ","^2X",["^2Y","^2Z"],"^2[",["^ ","^2Y","^30","^2Z",false]]]]],"^1C",null,"^1D",["^1>",[null]],"^1:",1,"^19",87,"^1;",87,"^1E",4,"^1F",true,"^1=",["^1>",[["^2T","^2U","^2V","^2W","~$&",["^ ","^2X",["^2Y","^2Z"],"^2[",["^ ","^2Y","^30","^2Z",false]]]]],"^1Y","Tries to load one namespace from filenames.\n  Will call the src-cb upon first success.\n  If can-recover? is false, will call src-cb with nil if it cannot load any namespace.\n  Returns :success if a nampespace was loaded otherwise, returns nil.\n  "],"~$try-to-load-cljsjs-ns",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",227,"^1:",7,"^1;",227,"^1<",28,"^1=",["^1>",["^1?",["^1>",[["^1L","^2W"]]]]],"^1Y","Try to load the js file corresponding to a cljsjs package.\n  For that, we have to convert the package name into a full path - hosted on this git repo: https://github.com/viebel/cljsjs-hosted\n  "],"^I","~$klipse.lang.clojure.io/try-to-load-cljsjs-ns","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",28,"^1B",["^1>",[["^1L","^2W"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",227,"^1;",227,"^1E",2,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^1L","^2W"]]]]],"^1Y","Try to load the js file corresponding to a cljsjs package.\n  For that, we have to convert the package name into a full path - hosted on this git repo: https://github.com/viebel/cljsjs-hosted\n  "],"~$load-ns-from-cache",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",126,"^1:",7,"^1;",126,"^1<",25,"^1=",["^1>",["^1?",["^1>",[["^1L","^2W","~$macro?"]]]]]],"^I","~$klipse.lang.clojure.io/load-ns-from-cache","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",25,"^1B",["^1>",[["^1L","^2W","^36"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",126,"^1;",126,"^1E",3,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^1L","^2W","^36"]]]]]],"~$edn",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",16,"^1:",7,"^1;",16,"^1<",10,"^1=",["^1>",["^1?",["^1>",[["~$json"]]]]]],"^I","~$klipse.lang.clojure.io/edn","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",10,"^1B",["^1>",[["^39"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",16,"^1;",16,"^1E",1,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^39"]]]]]],"~$simple-goog-path",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",293,"^1:",7,"^1;",293,"^1<",23,"^1=",["^1>",["^1?",["^1>",[["^24"]]]]]],"^I","~$klipse.lang.clojure.io/simple-goog-path","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",23,"^1B",["^1>",[["^24"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",293,"^1;",293,"^1E",1,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^24"]]]]]],"~$cached-macro-ns?",["^ ","^16",null,"^17",["^ ","^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^19",144,"^1:",7,"^1;",144,"^1<",23,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]]],"^I","~$klipse.lang.clojure.io/cached-macro-ns?","^1A",false,"^18","/Users/jocrau/dev/workspaces/klipse/src/klipse/lang/clojure/io.cljs","^1<",23,"^1B",["^1>",[["^1L"]]],"^1C",null,"^1D",["^1>",[null,null]],"^1:",1,"^19",144,"^1;",144,"^1E",1,"^1F",true,"^1=",["^1>",["^1?",["^1>",[["^1L"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^A","^A","^C","^C","^?","^?","^S","^S"],"~:cljs.analyzer/constants",["^ ","~:seen",["^H",["~$cljs.env.macros","~:path","~:js","~:clojure_bundled_ns_ignore_regexp","~:goog","~:transform","~$cljs.spec.test$macros","~$cljs.analyzer.macros","~:else","~$eval","~$cljs.tools.reader","~:macros","~:default","^I","~$cljs.js","~$cljs.core","^18","^30","~$cljs.test","~$cljs.tools.reader.reader-types","~:recur","~$cljsjs.react","~$cljs.env","~:source","~:cache-buster","~$cljs.compiler.macros","~$cljsjs.react.dom.server","~:lang","~$cljsjs.react.dom","~$cljs.pprint","~:cached_ns_root","~:with-credentials?","~:cache","~:success","~:status","~:macro","~:can-recover?","~$cljs.spec.test","~:clojure_cached_macro_ns_regexp","~:gist","~$cljs.source-map","~:json","~:clojure_cached_ns_regexp","~:hierarchy","~:body","~:clj","~:cljs","~$clojure.template"]],"~:order",["^4=","^4?","^I","^3N","^3D","^47","^3G","^4;","^3O","^4B","^3J","^3C","^41","^3Y","^3Q","^3P","^3R","^4C","^4<","^3M","^3S","^3V","^3X","^3H","^48","^3T","^45","^43","^3[","^18","^46","^4@","^3K","^42","^44","^3W","^3E","^4:","^4>","^49","^3I","^3L","^30","^4A","^3F","^3U","^3Z","^40"]],"^1Y",null]