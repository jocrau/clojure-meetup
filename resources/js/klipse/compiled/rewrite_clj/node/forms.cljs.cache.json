["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.forms","~:imports",null,"~:requires",["^ ","~$node","~$rewrite-clj.node.protocols","^:","^:"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$FormsNode",["^ ","~:num-fields",1,"~:protocols",["^4",["~$cljs.core/IRecord","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$rewrite-clj.node.protocols/InnerNode","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$rewrite-clj.node.forms/Object","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^5","~$rewrite-clj.node.forms/FormsNode","~:file","resources/js/klipse/compiled/rewrite_clj/node/forms.cljs","~:end-column",21,"~:type",true,"~:column",12,"~:internal-ctor",true,"~:line",6,"~:record",true,"~:end-line",6,"~:skip-protocol-flag",["^4",["^A","^B","^C","^D","^E","^G","^H","^I","^K","^L","^N","^O","^P","^Q"]]],"~$->FormsNode",["^ ","~:protocol-inline",null,"~:meta",["^ ","^S","/Users/jocrau/dev/workspaces/clojure-meetup/resources/js/klipse/compiled/rewrite_clj/node/forms.cljs","^X",6,"^V",12,"^Z",6,"^T",21,"^W",true,"~:factory","~:positional","~:arglists",["~#list",["~$quote",["^16",[["~$children"]]]]],"~:doc","Positional factory function for rewrite-clj.node.forms/FormsNode."],"^5","~$rewrite-clj.node.forms/->FormsNode","~:variadic",false,"^S","resources/js/klipse/compiled/rewrite_clj/node/forms.cljs","^T",21,"~:method-params",["^16",[["^18"]]],"~:protocol-impl",null,"~:arglists-meta",["^16",[null,null]],"^V",1,"^W",true,"^13","^14","^X",6,"^Z",6,"~:max-fixed-arity",1,"~:fn-var",true,"^15",["^16",["^17",["^16",[["^18"]]]]],"^19","Positional factory function for rewrite-clj.node.forms/FormsNode."],"~$map->FormsNode",["^ ","^11",null,"^12",["^ ","^S","/Users/jocrau/dev/workspaces/clojure-meetup/resources/js/klipse/compiled/rewrite_clj/node/forms.cljs","^X",6,"^V",12,"^Z",6,"^T",21,"^W",true,"^13","~:map","^15",["^16",["^17",["^16",[["~$G__15102"]]]]],"^19","Factory function for rewrite-clj.node.forms/FormsNode, taking a map of keywords to field values."],"^5","~$rewrite-clj.node.forms/map->FormsNode","^1;",false,"^S","resources/js/klipse/compiled/rewrite_clj/node/forms.cljs","^T",21,"^1<",["^16",[["^1C"]]],"^1=",null,"^1>",["^16",[null,null]],"^V",1,"^W",true,"^13","^1B","^X",6,"^Z",6,"^1?",1,"^1@",true,"^15",["^16",["^17",["^16",[["^1C"]]]]],"^19","Factory function for rewrite-clj.node.forms/FormsNode, taking a map of keywords to field values."],"~$forms-node",["^ ","^11",null,"^12",["^ ","^S","/Users/jocrau/dev/workspaces/clojure-meetup/resources/js/klipse/compiled/rewrite_clj/node/forms.cljs","^X",39,"^V",7,"^Z",39,"^T",17,"^15",["^16",["^17",["^16",[["^18"]]]]],"^19","Create top-level node wrapping multiple children\n   (equals an implicit `do` on the top-level)."],"^5","~$rewrite-clj.node.forms/forms-node","^1;",false,"^S","resources/js/klipse/compiled/rewrite_clj/node/forms.cljs","^T",17,"^1<",["^16",[["^18"]]],"^1=",null,"^1>",["^16",[null,null]],"^V",1,"^X",39,"^Z",39,"^1?",1,"^1@",true,"^15",["^16",["^17",["^16",[["^18"]]]]],"^19","Create top-level node wrapping multiple children\n   (equals an implicit `do` on the top-level)."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:children","^18","~$do","~:forms"]],"~:order",["^1K","^1M","^1L","^18"]],"^19",null]