["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$parseInt",["^ "],"~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.fn","~:imports",null,"~:requires",["^ ","~$node","~$rewrite-clj.node.protocols","^=","^=","~$w","~$clojure.walk","^>","^>"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$construct-fn",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/jocrau/dev/workspaces/clojure-meetup/resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","~:line",7,"~:column",8,"~:end-line",7,"~:end-column",20,"~:private",true,"~:arglists",["~#list",["~$quote",["^L",[["~$syms","~$vararg","~$body"]]]]],"~:doc","Construct function form."],"^J",true,"^8","~$rewrite-clj.node.fn/construct-fn","~:variadic",false,"^E","resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^I",20,"~:method-params",["^L",[["^N","^O","^P"]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^G",1,"^F",7,"^H",7,"~:max-fixed-arity",3,"~:fn-var",true,"^K",["^L",["^M",["^L",[["^N","^O","^P"]]]]],"^Q","Construct function form."],"~$sym-index",["^ ","^C",null,"^D",["^ ","^E","/Users/jocrau/dev/workspaces/clojure-meetup/resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^F",19,"^G",8,"^H",19,"^I",17,"^J",true,"^K",["^L",["^M",["^L",[["~$n"]]]]],"^Q","Get index based on the substring following the parameter's `%`.\n   Zero means vararg."],"^J",true,"^8","~$rewrite-clj.node.fn/sym-index","^S",false,"^E","resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^I",17,"^T",["^L",[["~$n"]]],"^U",null,"^V",["^L",[null,null]],"^G",1,"^F",19,"^H",19,"^W",1,"^X",true,"^K",["^L",["^M",["^L",[["~$n"]]]]],"^Q","Get index based on the substring following the parameter's `%`.\n   Zero means vararg."],"~$symbol->gensym",["^ ","^C",null,"^D",["^ ","^E","/Users/jocrau/dev/workspaces/clojure-meetup/resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^F",29,"^G",8,"^H",29,"^I",22,"^J",true,"^K",["^L",["^M",["^L",[["~$sym-seq","~$vararg?","~$max-n","~$sym"]]]]],"^Q","If symbol starting with `%`, convert to respective gensym."],"^J",true,"^8","~$rewrite-clj.node.fn/symbol->gensym","^S",false,"^E","resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^I",22,"^T",["^L",[["^10","^11","^12","^13"]]],"^U",null,"^V",["^L",[null,null]],"^G",1,"^F",29,"^H",29,"^W",4,"^X",true,"^K",["^L",["^M",["^L",[["^10","^11","^12","^13"]]]]],"^Q","If symbol starting with `%`, convert to respective gensym."],"~$fn-walk",["^ ","^C",null,"^D",["^ ","^E","/Users/jocrau/dev/workspaces/clojure-meetup/resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^F",42,"^G",8,"^H",42,"^I",15,"^J",true,"^K",["^L",["^M",["^L",[["~$form"]]]]],"^Q","Walk the form and create an expand function form."],"^J",true,"^8","~$rewrite-clj.node.fn/fn-walk","^S",false,"^E","resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^I",15,"^T",["^L",[["^16"]]],"^U",null,"^V",["^L",[null,null]],"^G",1,"^F",42,"^H",42,"^W",1,"^X",true,"^K",["^L",["^M",["^L",[["^16"]]]]],"^Q","Walk the form and create an expand function form."],"~$FnNode",["^ ","~:num-fields",1,"~:protocols",["^7",["~$cljs.core/IRecord","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$rewrite-clj.node.protocols/InnerNode","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.fn/Object","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^8","~$rewrite-clj.node.fn/FnNode","^E","resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^I",18,"~:type",true,"^G",12,"~:internal-ctor",true,"^F",65,"~:record",true,"^H",65,"~:skip-protocol-flag",["^7",["^1;","^1<","^1=","^1>","^1?","^1A","^1B","^1C","^1D","^1E","^1H","^1I","^1J","^1K"]]],"~$->FnNode",["^ ","^C",null,"^D",["^ ","^E","/Users/jocrau/dev/workspaces/clojure-meetup/resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^F",65,"^G",12,"^H",65,"^I",18,"^1N",true,"~:factory","~:positional","^K",["^L",["^M",["^L",[["~$children"]]]]]],"^8","~$rewrite-clj.node.fn/->FnNode","^S",false,"^E","resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^I",18,"^T",["^L",[["^1T"]]],"^U",null,"^V",["^L",[null,null]],"^G",1,"^1N",true,"^1R","^1S","^F",65,"^H",65,"^W",1,"^X",true,"^K",["^L",["^M",["^L",[["^1T"]]]]]],"~$map->FnNode",["^ ","^C",null,"^D",["^ ","^E","/Users/jocrau/dev/workspaces/clojure-meetup/resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^F",65,"^G",12,"^H",65,"^I",18,"^1N",true,"^1R","~:map","^K",["^L",["^M",["^L",[["~$G__31615"]]]]]],"^8","~$rewrite-clj.node.fn/map->FnNode","^S",false,"^E","resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^I",18,"^T",["^L",[["^1X"]]],"^U",null,"^V",["^L",[null,null]],"^G",1,"^1N",true,"^1R","^1W","^F",65,"^H",65,"^W",1,"^X",true,"^K",["^L",["^M",["^L",[["^1X"]]]]]],"~$fn-node",["^ ","^C",null,"^D",["^ ","^E","/Users/jocrau/dev/workspaces/clojure-meetup/resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^F",94,"^G",7,"^H",94,"^I",14,"^K",["^L",["^M",["^L",[["^1T"]]]]],"^Q","Create node representing an anonymous function."],"^8","~$rewrite-clj.node.fn/fn-node","^S",false,"^E","resources/js/klipse/compiled/rewrite_clj/node/fn.cljs","^I",14,"^T",["^L",[["^1T"]]],"^U",null,"^V",["^L",[null,null]],"^G",1,"^F",94,"^H",94,"^W",1,"^X",true,"^K",["^L",["^M",["^L",[["^1T"]]]]],"^Q","Create node representing an anonymous function."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^7",["~$&","~:children","~:fn","~:else","^1T","~$fn*"]],"~:order",["^27","~$&","^26","^24","^25","^1T"]],"^Q",null]